* {
  margin: 0px;
  padding: 0px;
}

html {
  font-size: 14px;
  scroll-behavior: smooth; 
}

div {
  font-size: 40px;
}

.use-viewport-units{
  background-color:yellow;
  width: 100vw; /* Usa 100% do viewport width (100% da largura total visível da tela) */
  height: 100vh; /* Usa 100% do viewport height (100% da altura total visível da tela). Geralmente usamos vh para quando queremos fazer páginas com seções que ocupam a altura de uma tela toda! */
}

.second-page {
  background-color: cadetblue;
  width: 100vw;
  height: 100vh;
}

.use-em {
  font-size: 1em; /* Se baseia no font-size do pai (40px) */
}

.use-rem {
  font-size: 1rem; /* Se baseia no font-size da raiz (html, 14px) */
}

.use-percentage {
  font-size: 50%; /* Se baseia no elemento pai, portanto seriam 50% de 40px = 20px */
}

.vmax {
  font-size: 2vmax; /* Usa 1% da maior dimensão do viewport. Exemplo: em 1000x500 ele usaria 1% de 1000, ou seja, 10px. Como pedimos 2vmax, vai ser 20px. existe também a unidade vmin (viewport minimum), que funciona de maneira oposta, usando 1% da menor dimensão do viewport*/
}

/* Pixel é uma unidade absoluta. em e rem são unidades relativas à fonte
de determinado elemento (seu pai, ou o elemento raiz, a.k.a html). */

/* em = relativo ao font-size do pai */
/* Escala com o elemento pai, ótimo para tipografia aninhada */
/* Mantém proporções de padding/margin dentro de componentes */

/* rem = relativo ao font-size da raiz (html) */
/* Escala de forma consistente em todo o site */
/* Facilita alterar o tamanho base global do layout */
/* Bom para acessibilidade: responde a zoom e ajustes de fonte do navegador */